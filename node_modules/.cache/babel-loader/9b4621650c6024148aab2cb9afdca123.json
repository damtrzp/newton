{"ast":null,"code":"import { Interval } from '../interval';\nimport rmath from '../round';\nimport constants from '../constants';\nimport * as utils from './utils';\nimport * as arithmetic from './arithmetic';\n/**\n * @mixin misc\n */\n\n/**\n * Computes e^x where e is the mathematical constant equal to the base of the\n * natural logarithm\n *\n * @example\n * ```typescript\n * Interval.exp(\n *   Interval(-1, 1)\n * )  // Interval(0.3679, 2.7183)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function exp(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n\n  return new Interval(rmath.expLo(x.lo), rmath.expHi(x.hi));\n}\n/**\n * Computes the natural logarithm of x\n *\n * @example\n * ```typescript\n * Interval.log(\n *   Interval(1, Math.exp(3))\n * )  // Interval(0, 3)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function log(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n\n  var l = x.lo <= 0 ? Number.NEGATIVE_INFINITY : rmath.logLo(x.lo);\n  return new Interval(l, rmath.logHi(x.hi));\n}\n/**\n * Alias for {@link log}\n * @function\n */\n\nexport var ln = log;\nexport var LOG_EXP_10 = log(new Interval(10, 10));\n/**\n * Computes the logarithm base 10 of x\n *\n * @example\n * ```typescript\n * Interval.log10(\n *   Interva(1, 1000)\n * )  // Interval(0, 3)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function log10(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n\n  return arithmetic.div(log(x), LOG_EXP_10);\n}\nexport var LOG_EXP_2 = log(new Interval(2, 2));\n/**\n * Computes the logarithm base 2 of x\n *\n * @example\n * ```typescript\n * Interval.log10(\n *   Interva(1, 8)\n * )  // Interval(0, 3)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function log2(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n\n  return arithmetic.div(log(x), LOG_EXP_2);\n}\n/**\n * Computes an interval that has all the values of x and y, note that it may be\n * possible that values that don't belong to either x or y are included in the\n * interval that represents the hull\n *\n * @example\n * ```typescript\n * Interval.hull(\n *   Interval(-1, 1),\n *   Interval(5, 7)\n * )  // Interval(-1, 7)\n * Interval.hull(\n *   Interval(-1, 1),\n *   Interval.EMPTY\n * )  // Interval(-1, 1)\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\n\nexport function hull(x, y) {\n  var badX = utils.isEmpty(x);\n  var badY = utils.isEmpty(y);\n\n  if (badX && badY) {\n    return constants.EMPTY;\n  } else if (badX) {\n    return y.clone();\n  } else if (badY) {\n    return x.clone();\n  } else {\n    return new Interval(Math.min(x.lo, y.lo), Math.max(x.hi, y.hi));\n  }\n}\n/**\n * Computes an interval that has all the values that belong to both x and y\n *\n * @example\n * ```typescript\n * Interval.intersection(\n *   Interval(-1, 1),\n *   Interval(0, 7)\n * )  // Interval(0, 1)\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\n\nexport function intersection(x, y) {\n  if (utils.isEmpty(x) || utils.isEmpty(y)) {\n    return constants.EMPTY;\n  }\n\n  var lo = Math.max(x.lo, y.lo);\n  var hi = Math.min(x.hi, y.hi);\n\n  if (lo <= hi) {\n    return new Interval(lo, hi);\n  }\n\n  return constants.EMPTY;\n}\n/**\n * Computes an interval that has all the values that belong to both x and y,\n * the difference with {@link hull} is that x and y must overlap to\n * compute the union\n *\n * @example\n * ```typescript\n * Interval.union(\n *   Interval(-1, 1),\n *   Interval(5, 7)\n * )  // throws error\n * Interval.union(\n *   Interval(-1, 1),\n *   Interval(1, 7)\n * )  // Interval(-1, 7)\n * ```\n *\n * @throws {Error} When x and y don't overlap\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\n\nexport function union(x, y) {\n  if (!utils.intervalsOverlap(x, y)) {\n    throw Error('Interval#union: intervals do not overlap');\n  }\n\n  return new Interval(Math.min(x.lo, y.lo), Math.max(x.hi, y.hi));\n}\n/**\n * Computes the difference between `x` and `y`, i.e. an interval with all the\n * values of `x` that are not in `y`\n *\n * @example\n * ```typescript\n * Interval.difference(\n *   Interval(3, 5),\n *   Interval(4, 6)\n * )  // Interval(3, prev(4))\n * Interval.difference(\n *   Interval(0, 3),\n *   Interval(0, 1)\n * )  // Interval(next(1), 3)\n * Interval.difference(\n *   Interval(0, 1),\n *   Interval.WHOLE\n * )  // Interval.EMPTY\n * Interval.difference(\n *   Interval(-Infinity, 0),\n *   Interval.WHOLE\n * )  // Interval.EMPTY\n * ```\n *\n * @throws {Error} When the difference creates multiple intervals\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\n\nexport function difference(x, y) {\n  if (utils.isEmpty(x) || utils.isWhole(y)) {\n    return constants.EMPTY;\n  }\n\n  if (utils.intervalsOverlap(x, y)) {\n    if (x.lo < y.lo && y.hi < x.hi) {\n      // difference creates multiple subsets\n      throw Error('Interval.difference: difference creates multiple intervals');\n    } // handle corner cases first\n\n\n    if (y.lo <= x.lo && y.hi === Infinity || y.hi >= x.hi && y.lo === -Infinity) {\n      return constants.EMPTY;\n    } // NOTE: empty interval is handled automatically\n    // e.g.\n    //\n    //    n = difference([0,1], [0,1]) // n = Interval(next(1), 1) = EMPTY\n    //    isEmpty(n) === true\n    //\n\n\n    if (y.lo <= x.lo) {\n      return new Interval().halfOpenLeft(y.hi, x.hi);\n    } // y.hi >= x.hi\n\n\n    return new Interval().halfOpenRight(x.lo, y.lo);\n  }\n\n  return x.clone();\n}\n/**\n * Computes the distance between the endpoints of the interval i.e. `x.hi - x.lo`\n *\n * @example\n * ```typescript\n * Interval.width(\n *   Interval(1, 2)\n * )  // 1\n * Interval.width(\n *   Interval(-1, 1)\n * )  // 2\n * Interval.width(\n *   Interval(1, 1)\n * )  // next(0) ~5e-324\n * Interval.width(\n *   Interval.EMPTY\n * )  // 0\n * ```\n *\n * @param {Interval} x\n * @returns {number}\n */\n\nexport function width(x) {\n  if (utils.isEmpty(x)) {\n    return 0;\n  }\n\n  return rmath.subHi(x.hi, x.lo);\n}\n/**\n * Alias for {@link  width}\n * @function\n */\n\nexport var wid = width;\n/**\n * Computes the absolute value of `x`\n *\n * @example\n * ```typescript\n * Interval.abs(\n *   Interval(2, 3)\n * )  // Interval(2, 3)\n * Interval.abs(\n *   Interval(-2, 3)\n * )  // Interval(2, 3)\n * Interval.abs(\n *   Interval(-3, -2)\n * )  // Interval(2, 3)\n * Interval.abs(\n *   Interval(-3, 2)\n * )  // Interval(0, 3)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function abs(x) {\n  if (utils.isEmpty(x) || utils.isWhole(x)) {\n    return constants.EMPTY;\n  }\n\n  if (x.lo >= 0) {\n    return x.clone();\n  }\n\n  if (x.hi <= 0) {\n    return arithmetic.negative(x);\n  }\n\n  return new Interval(0, Math.max(-x.lo, x.hi));\n}\n/**\n * Computes an interval with the maximum values for each endpoint based on `x`\n * and `y`\n *\n * @example\n * ```typescript\n * Interval.max(\n *   Interval(0, 3),\n *   Interval(1, 2)\n * )  // Interval(1, 3)\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\n\nexport function max(x, y) {\n  var badX = utils.isEmpty(x);\n  var badY = utils.isEmpty(y);\n\n  if (badX && badY) {\n    return constants.EMPTY;\n  } else if (badX) {\n    return y.clone();\n  } else if (badY) {\n    return x.clone();\n  } else {\n    return new Interval(Math.max(x.lo, y.lo), Math.max(x.hi, y.hi));\n  }\n}\n/**\n * Computes an interval with the minimum values for each endpoint based on `x` and `y`\n *\n * @example\n * ```typescript\n * Interval.min(\n *   Interval(0, 3),\n *   Interval(1, 2)\n * )  // Interval(0, 2)\n * ```\n *\n * @param {Interval} x\n * @param {Interval} y\n * @return {Interval}\n */\n\nexport function min(x, y) {\n  var badX = utils.isEmpty(x);\n  var badY = utils.isEmpty(y);\n\n  if (badX && badY) {\n    return constants.EMPTY;\n  } else if (badX) {\n    return y.clone();\n  } else if (badY) {\n    return x.clone();\n  } else {\n    return new Interval(Math.min(x.lo, y.lo), Math.min(x.hi, y.hi));\n  }\n}\n/**\n * Creates an interval equal to `x`, equivalent to `Interval().set(x.lo, x.hi)`\n *\n * @example\n * ```typescript\n * Interval.clone(\n *   Interval(1, 2)\n * )  // Interval(1, 2)\n * Interval.clone(\n *   Interval.EMPTY\n * )  // Interval.EMPTY\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function clone(x) {\n  // no bound checking\n  return new Interval().set(x.lo, x.hi);\n}","map":{"version":3,"mappings":"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","names":["Interval","rmath","constants","utils","arithmetic","exp","x","isEmpty","EMPTY","expLo","lo","expHi","hi","log","l","Number","NEGATIVE_INFINITY","logLo","logHi","ln","LOG_EXP_10","log10","div","LOG_EXP_2","log2","hull","y","badX","badY","clone","Math","min","max","intersection","union","intervalsOverlap","Error","difference","isWhole","Infinity","halfOpenLeft","halfOpenRight","width","subHi","wid","abs","negative","set"],"sources":["../../src/operations/misc.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}