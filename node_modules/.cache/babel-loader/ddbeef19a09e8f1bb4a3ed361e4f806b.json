{"ast":null,"code":"'use strict';\n\nimport { Interval } from '../interval';\nimport rmath from '../round';\nimport constants from '../constants';\nimport * as utils from './utils';\nimport * as arithmetic from './arithmetic';\nimport * as algebra from './algebra';\nimport * as misc from './misc';\n/**\n * @mixin trigonometric\n */\n\n/**\n * Checks if an interval is\n * - [-Infinity, -Infinity]\n * - [Infinity, Infinity]\n * @param {Interval} x\n * @returns {boolean}\n */\n\nfunction onlyInfinity(x) {\n  return !isFinite(x.lo) && x.lo === x.hi;\n}\n/**\n * moves interval 2PI * k to the right until both bounds are positive\n * @param interval\n */\n\n\nfunction handleNegative(interval) {\n  if (interval.lo < 0) {\n    if (interval.lo === -Infinity) {\n      interval.lo = 0;\n      interval.hi = Infinity;\n    } else {\n      var n = Math.ceil(-interval.lo / constants.PI_TWICE_LOW);\n      interval.lo += constants.PI_TWICE_LOW * n;\n      interval.hi += constants.PI_TWICE_LOW * n;\n    }\n  }\n\n  return interval;\n}\n/**\n * Computes the cosine of `x`\n *\n * @example\n * ```typescript\n * Interval.cos(\n *   Interval(0, 0)\n * ) // Interval(1, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.cos(\n *   Interval(0, Math.PI / 2)\n * ) // Interval(0, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.cos(\n *   Interval(3 * Math.PI / 2, 3 * Math.PI)\n * ) // Interval(-1, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.cos(\n *   Interval(-Infinity, x)\n * )\n * // Interval(-1, 1) if x > -Infinity\n * // Interval.EMPTY otherwise\n * ```\n *\n * @example\n * ```typescript\n * Interval.cos(\n *   Interval(x, Infinity)\n * )\n * // Interval(-1, 1) if x < Infinity\n * // Interval.EMPTY otherwise\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\n\nexport function cos(x) {\n  if (utils.isEmpty(x) || onlyInfinity(x)) {\n    return constants.EMPTY;\n  } // create a clone of `x` because the clone is going to be modified\n\n\n  var cache = new Interval().set(x.lo, x.hi);\n  handleNegative(cache);\n  var pi2 = constants.PI_TWICE;\n  var t = algebra.fmod(cache, pi2);\n\n  if (misc.width(t) >= pi2.lo) {\n    return new Interval(-1, 1);\n  } // when t.lo > pi it's the same as\n  // -cos(t - pi)\n\n\n  if (t.lo >= constants.PI_HIGH) {\n    var cosv = cos(arithmetic.sub(t, constants.PI));\n    return arithmetic.negative(cosv);\n  }\n\n  var lo = t.lo;\n  var hi = t.hi;\n  var rlo = rmath.cosLo(hi);\n  var rhi = rmath.cosHi(lo); // it's ensured that t.lo < pi and that t.lo >= 0\n\n  if (hi <= constants.PI_LOW) {\n    // when t.hi < pi\n    // [cos(t.lo), cos(t.hi)]\n    return new Interval(rlo, rhi);\n  } else if (hi <= pi2.lo) {\n    // when t.hi < 2pi\n    // [-1, max(cos(t.lo), cos(t.hi))]\n    return new Interval(-1, Math.max(rlo, rhi));\n  } else {\n    // t.lo < pi and t.hi > 2pi\n    return new Interval(-1, 1);\n  }\n}\n/**\n * Computes the sine of `x`\n *\n * @example\n * ```typescript\n * Interval.sin(\n *   Interval(0, 0)\n * ) // Interval(0, 0)\n * ```\n *\n * @example\n * ```typescript\n * Interval.sin(\n *   Interval(0, Math.PI / 2)\n * ) // Interval(0, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.sin(\n *   Interval(Math.PI / 2, Math.PI / 2)\n * ) // Interval(1, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.sin(\n *   Interval(Math.PI / 2, -Math.PI / 2)\n * ) // Interval(-1, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.sin(\n *   Interval(Math.PI, 3 * Math.PI / 2)\n * ) // Interval(-1, 0)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function sin(x) {\n  if (utils.isEmpty(x) || onlyInfinity(x)) {\n    return constants.EMPTY;\n  }\n\n  return cos(arithmetic.sub(x, constants.PI_HALF));\n}\n/**\n * Computes the tangent of `x`\n *\n * @example\n * ```typescript\n * Interval.tan(\n *   Interval(-Math.PI / 4, Math.PI / 4)\n * ) // Interval(-1, 1)\n * ```\n *\n * @example\n * ```typescript\n * Interval.tan(\n *   Interval(0, Math.PI / 2)\n * ) // Interval.WHOLE\n * ```\n *\n * @example\n * ```typescript\n * Interval.tan(\n *   Interval(-Infinity, x)\n * )\n * // Interval.WHOLE if x > -Infinity\n * // Interval.EMPTY otherwise\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function tan(x) {\n  if (utils.isEmpty(x) || onlyInfinity(x)) {\n    return constants.EMPTY;\n  } // create a clone of `x` because the clone is going to be modified\n\n\n  var cache = new Interval().set(x.lo, x.hi);\n  handleNegative(cache);\n  var pi = constants.PI;\n  var t = algebra.fmod(cache, pi);\n\n  if (t.lo >= constants.PI_HALF_LOW) {\n    t = arithmetic.sub(t, pi);\n  }\n\n  if (t.lo <= -constants.PI_HALF_LOW || t.hi >= constants.PI_HALF_LOW) {\n    return constants.WHOLE;\n  }\n\n  return new Interval(rmath.tanLo(t.lo), rmath.tanHi(t.hi));\n}\n/**\n * Computes the arcsine of `x`\n *\n * @example\n * ```typescript\n * Interval.asin(\n *   Interval(-1.57079633, 1.57079633)\n * )  // Interval(-10, 10)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function asin(x) {\n  if (utils.isEmpty(x) || x.hi < -1 || x.lo > 1) {\n    return constants.EMPTY;\n  }\n\n  var lo = x.lo <= -1 ? -constants.PI_HALF_HIGH : rmath.asinLo(x.lo);\n  var hi = x.hi >= 1 ? constants.PI_HALF_HIGH : rmath.asinHi(x.hi);\n  return new Interval(lo, hi);\n}\n/**\n * Computes the arccosine of `x`\n *\n * @example\n * ```typescript\n * Interval.acos(\n *   Interval(0, 1)\n * )  // Interval(0, Math.PI / 2)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function acos(x) {\n  if (utils.isEmpty(x) || x.hi < -1 || x.lo > 1) {\n    return constants.EMPTY;\n  }\n\n  var lo = x.hi >= 1 ? 0 : rmath.acosLo(x.hi);\n  var hi = x.lo <= -1 ? constants.PI_HIGH : rmath.acosHi(x.lo);\n  return new Interval(lo, hi);\n}\n/**\n * Computes the arctangent of `x`\n *\n * @example\n * ```typescript\n * Interval.atan(\n *   Interval(-1, 1)\n * )  // Interval(-0.785398163, 0.785398163)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function atan(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n\n  return new Interval(rmath.atanLo(x.lo), rmath.atanHi(x.hi));\n}\n/**\n * Computes the hyperbolic sine of `x`\n *\n * @example\n * ```typescript\n * Interval.sinh(\n *   Interval(-2, 2)\n * )  // Interval(-3.6286040785, 3.6286040785)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function sinh(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n\n  return new Interval(rmath.sinhLo(x.lo), rmath.sinhHi(x.hi));\n}\n/**\n * Computes the hyperbolic cosine of `x`\n *\n * @example\n * ```typescript\n * Interval.cosh(\n *   Interval(-2, 2)\n * )  // Interval(1, 3.76219569108)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function cosh(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n\n  if (x.hi < 0) {\n    return new Interval(rmath.coshLo(x.hi), rmath.coshHi(x.lo));\n  } else if (x.lo >= 0) {\n    return new Interval(rmath.coshLo(x.lo), rmath.coshHi(x.hi));\n  } else {\n    return new Interval(1, rmath.coshHi(-x.lo > x.hi ? x.lo : x.hi));\n  }\n}\n/**\n * Computes the hyperbolic tangent of `x`\n *\n * @example\n * ```typescript\n * Interval.tanh(\n *   Interval(-Infinity, Infinity)\n * )  // Interval(-1, 1)\n * ```\n *\n * @param {Interval} x\n * @return {Interval}\n */\n\nexport function tanh(x) {\n  if (utils.isEmpty(x)) {\n    return constants.EMPTY;\n  }\n\n  return new Interval(rmath.tanhLo(x.lo), rmath.tanhHi(x.hi));\n}","map":{"version":3,"mappings":"AAAA;;AACA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAO,KAAKC,IAAZ,MAAsB,QAAtB;AAEA;;;;AAIA;;;;;;;;AAOA,SAASC,YAAT,CAAsBC,CAAtB,EAAiC;EAC/B,OAAO,CAACC,QAAQ,CAACD,CAAC,CAACE,EAAH,CAAT,IAAmBF,CAAC,CAACE,EAAF,KAASF,CAAC,CAACG,EAArC;AACD;AAED;;;;;;AAIA,SAASC,cAAT,CAAwBC,QAAxB,EAA0C;EACxC,IAAIA,QAAQ,CAACH,EAAT,GAAc,CAAlB,EAAqB;IACnB,IAAIG,QAAQ,CAACH,EAAT,KAAgB,CAACI,QAArB,EAA+B;MAC7BD,QAAQ,CAACH,EAAT,GAAc,CAAd;MACAG,QAAQ,CAACF,EAAT,GAAcG,QAAd;IACD,CAHD,MAGO;MACL,IAAMC,CAAC,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACJ,QAAQ,CAACH,EAAV,GAAeR,SAAS,CAACgB,YAAnC,CAAV;MACAL,QAAQ,CAACH,EAAT,IAAeR,SAAS,CAACgB,YAAV,GAAyBH,CAAxC;MACAF,QAAQ,CAACF,EAAT,IAAeT,SAAS,CAACgB,YAAV,GAAyBH,CAAxC;IACD;EACF;;EACD,OAAOF,QAAP;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,OAAM,SAAUM,GAAV,CAAcX,CAAd,EAAyB;EAC7B,IAAIL,KAAK,CAACiB,OAAN,CAAcZ,CAAd,KAAoBD,YAAY,CAACC,CAAD,CAApC,EAAyC;IACvC,OAAON,SAAS,CAACmB,KAAjB;EACD,CAH4B,CAK7B;;;EACA,IAAMC,KAAK,GAAG,IAAItB,QAAJ,GAAeuB,GAAf,CAAmBf,CAAC,CAACE,EAArB,EAAyBF,CAAC,CAACG,EAA3B,CAAd;EACAC,cAAc,CAACU,KAAD,CAAd;EAEA,IAAME,GAAG,GAAGtB,SAAS,CAACuB,QAAtB;EACA,IAAMC,CAAC,GAAGrB,OAAO,CAACsB,IAAR,CAAaL,KAAb,EAAoBE,GAApB,CAAV;;EACA,IAAIlB,IAAI,CAACsB,KAAL,CAAWF,CAAX,KAAiBF,GAAG,CAACd,EAAzB,EAA6B;IAC3B,OAAO,IAAIV,QAAJ,CAAa,CAAC,CAAd,EAAiB,CAAjB,CAAP;EACD,CAb4B,CAe7B;EACA;;;EACA,IAAI0B,CAAC,CAAChB,EAAF,IAAQR,SAAS,CAAC2B,OAAtB,EAA+B;IAC7B,IAAMC,IAAI,GAAGX,GAAG,CAACf,UAAU,CAAC2B,GAAX,CAAeL,CAAf,EAAkBxB,SAAS,CAAC8B,EAA5B,CAAD,CAAhB;IACA,OAAO5B,UAAU,CAAC6B,QAAX,CAAoBH,IAApB,CAAP;EACD;;EAED,IAAMpB,EAAE,GAAGgB,CAAC,CAAChB,EAAb;EACA,IAAMC,EAAE,GAAGe,CAAC,CAACf,EAAb;EACA,IAAMuB,GAAG,GAAGjC,KAAK,CAACkC,KAAN,CAAYxB,EAAZ,CAAZ;EACA,IAAMyB,GAAG,GAAGnC,KAAK,CAACoC,KAAN,CAAY3B,EAAZ,CAAZ,CAzB6B,CA0B7B;;EACA,IAAIC,EAAE,IAAIT,SAAS,CAACoC,MAApB,EAA4B;IAC1B;IACA;IACA,OAAO,IAAItC,QAAJ,CAAakC,GAAb,EAAkBE,GAAlB,CAAP;EACD,CAJD,MAIO,IAAIzB,EAAE,IAAIa,GAAG,CAACd,EAAd,EAAkB;IACvB;IACA;IACA,OAAO,IAAIV,QAAJ,CAAa,CAAC,CAAd,EAAiBgB,IAAI,CAACuB,GAAL,CAASL,GAAT,EAAcE,GAAd,CAAjB,CAAP;EACD,CAJM,MAIA;IACL;IACA,OAAO,IAAIpC,QAAJ,CAAa,CAAC,CAAd,EAAiB,CAAjB,CAAP;EACD;AACF;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAM,SAAUwC,GAAV,CAAchC,CAAd,EAAyB;EAC7B,IAAIL,KAAK,CAACiB,OAAN,CAAcZ,CAAd,KAAoBD,YAAY,CAACC,CAAD,CAApC,EAAyC;IACvC,OAAON,SAAS,CAACmB,KAAjB;EACD;;EACD,OAAOF,GAAG,CAACf,UAAU,CAAC2B,GAAX,CAAevB,CAAf,EAAkBN,SAAS,CAACuC,OAA5B,CAAD,CAAV;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAM,SAAUC,GAAV,CAAclC,CAAd,EAAyB;EAC7B,IAAIL,KAAK,CAACiB,OAAN,CAAcZ,CAAd,KAAoBD,YAAY,CAACC,CAAD,CAApC,EAAyC;IACvC,OAAON,SAAS,CAACmB,KAAjB;EACD,CAH4B,CAK7B;;;EACA,IAAMC,KAAK,GAAG,IAAItB,QAAJ,GAAeuB,GAAf,CAAmBf,CAAC,CAACE,EAArB,EAAyBF,CAAC,CAACG,EAA3B,CAAd;EACAC,cAAc,CAACU,KAAD,CAAd;EAEA,IAAMqB,EAAE,GAAGzC,SAAS,CAAC8B,EAArB;EACA,IAAIN,CAAC,GAAGrB,OAAO,CAACsB,IAAR,CAAaL,KAAb,EAAoBqB,EAApB,CAAR;;EACA,IAAIjB,CAAC,CAAChB,EAAF,IAAQR,SAAS,CAAC0C,WAAtB,EAAmC;IACjClB,CAAC,GAAGtB,UAAU,CAAC2B,GAAX,CAAeL,CAAf,EAAkBiB,EAAlB,CAAJ;EACD;;EACD,IAAIjB,CAAC,CAAChB,EAAF,IAAQ,CAACR,SAAS,CAAC0C,WAAnB,IAAkClB,CAAC,CAACf,EAAF,IAAQT,SAAS,CAAC0C,WAAxD,EAAqE;IACnE,OAAO1C,SAAS,CAAC2C,KAAjB;EACD;;EACD,OAAO,IAAI7C,QAAJ,CAAaC,KAAK,CAAC6C,KAAN,CAAYpB,CAAC,CAAChB,EAAd,CAAb,EAAgCT,KAAK,CAAC8C,KAAN,CAAYrB,CAAC,CAACf,EAAd,CAAhC,CAAP;AACD;AAED;;;;;;;;;;;;;;AAaA,OAAM,SAAUqC,IAAV,CAAexC,CAAf,EAA0B;EAC9B,IAAIL,KAAK,CAACiB,OAAN,CAAcZ,CAAd,KAAoBA,CAAC,CAACG,EAAF,GAAO,CAAC,CAA5B,IAAiCH,CAAC,CAACE,EAAF,GAAO,CAA5C,EAA+C;IAC7C,OAAOR,SAAS,CAACmB,KAAjB;EACD;;EACD,IAAMX,EAAE,GAAGF,CAAC,CAACE,EAAF,IAAQ,CAAC,CAAT,GAAa,CAACR,SAAS,CAAC+C,YAAxB,GAAuChD,KAAK,CAACiD,MAAN,CAAa1C,CAAC,CAACE,EAAf,CAAlD;EACA,IAAMC,EAAE,GAAGH,CAAC,CAACG,EAAF,IAAQ,CAAR,GAAYT,SAAS,CAAC+C,YAAtB,GAAqChD,KAAK,CAACkD,MAAN,CAAa3C,CAAC,CAACG,EAAf,CAAhD;EACA,OAAO,IAAIX,QAAJ,CAAaU,EAAb,EAAiBC,EAAjB,CAAP;AACD;AAED;;;;;;;;;;;;;;AAaA,OAAM,SAAUyC,IAAV,CAAe5C,CAAf,EAA0B;EAC9B,IAAIL,KAAK,CAACiB,OAAN,CAAcZ,CAAd,KAAoBA,CAAC,CAACG,EAAF,GAAO,CAAC,CAA5B,IAAiCH,CAAC,CAACE,EAAF,GAAO,CAA5C,EAA+C;IAC7C,OAAOR,SAAS,CAACmB,KAAjB;EACD;;EACD,IAAMX,EAAE,GAAGF,CAAC,CAACG,EAAF,IAAQ,CAAR,GAAY,CAAZ,GAAgBV,KAAK,CAACoD,MAAN,CAAa7C,CAAC,CAACG,EAAf,CAA3B;EACA,IAAMA,EAAE,GAAGH,CAAC,CAACE,EAAF,IAAQ,CAAC,CAAT,GAAaR,SAAS,CAAC2B,OAAvB,GAAiC5B,KAAK,CAACqD,MAAN,CAAa9C,CAAC,CAACE,EAAf,CAA5C;EACA,OAAO,IAAIV,QAAJ,CAAaU,EAAb,EAAiBC,EAAjB,CAAP;AACD;AAED;;;;;;;;;;;;;;AAaA,OAAM,SAAU4C,IAAV,CAAe/C,CAAf,EAA0B;EAC9B,IAAIL,KAAK,CAACiB,OAAN,CAAcZ,CAAd,CAAJ,EAAsB;IACpB,OAAON,SAAS,CAACmB,KAAjB;EACD;;EACD,OAAO,IAAIrB,QAAJ,CAAaC,KAAK,CAACuD,MAAN,CAAahD,CAAC,CAACE,EAAf,CAAb,EAAiCT,KAAK,CAACwD,MAAN,CAAajD,CAAC,CAACG,EAAf,CAAjC,CAAP;AACD;AAED;;;;;;;;;;;;;;AAaA,OAAM,SAAU+C,IAAV,CAAelD,CAAf,EAA0B;EAC9B,IAAIL,KAAK,CAACiB,OAAN,CAAcZ,CAAd,CAAJ,EAAsB;IACpB,OAAON,SAAS,CAACmB,KAAjB;EACD;;EACD,OAAO,IAAIrB,QAAJ,CAAaC,KAAK,CAAC0D,MAAN,CAAanD,CAAC,CAACE,EAAf,CAAb,EAAiCT,KAAK,CAAC2D,MAAN,CAAapD,CAAC,CAACG,EAAf,CAAjC,CAAP;AACD;AAED;;;;;;;;;;;;;;AAaA,OAAM,SAAUkD,IAAV,CAAerD,CAAf,EAA0B;EAC9B,IAAIL,KAAK,CAACiB,OAAN,CAAcZ,CAAd,CAAJ,EAAsB;IACpB,OAAON,SAAS,CAACmB,KAAjB;EACD;;EACD,IAAIb,CAAC,CAACG,EAAF,GAAO,CAAX,EAAc;IACZ,OAAO,IAAIX,QAAJ,CAAaC,KAAK,CAAC6D,MAAN,CAAatD,CAAC,CAACG,EAAf,CAAb,EAAiCV,KAAK,CAAC8D,MAAN,CAAavD,CAAC,CAACE,EAAf,CAAjC,CAAP;EACD,CAFD,MAEO,IAAIF,CAAC,CAACE,EAAF,IAAQ,CAAZ,EAAe;IACpB,OAAO,IAAIV,QAAJ,CAAaC,KAAK,CAAC6D,MAAN,CAAatD,CAAC,CAACE,EAAf,CAAb,EAAiCT,KAAK,CAAC8D,MAAN,CAAavD,CAAC,CAACG,EAAf,CAAjC,CAAP;EACD,CAFM,MAEA;IACL,OAAO,IAAIX,QAAJ,CAAa,CAAb,EAAgBC,KAAK,CAAC8D,MAAN,CAAa,CAACvD,CAAC,CAACE,EAAH,GAAQF,CAAC,CAACG,EAAV,GAAeH,CAAC,CAACE,EAAjB,GAAsBF,CAAC,CAACG,EAArC,CAAhB,CAAP;EACD;AACF;AAED;;;;;;;;;;;;;;AAaA,OAAM,SAAUqD,IAAV,CAAexD,CAAf,EAA0B;EAC9B,IAAIL,KAAK,CAACiB,OAAN,CAAcZ,CAAd,CAAJ,EAAsB;IACpB,OAAON,SAAS,CAACmB,KAAjB;EACD;;EACD,OAAO,IAAIrB,QAAJ,CAAaC,KAAK,CAACgE,MAAN,CAAazD,CAAC,CAACE,EAAf,CAAb,EAAiCT,KAAK,CAACiE,MAAN,CAAa1D,CAAC,CAACG,EAAf,CAAjC,CAAP;AACD","names":["Interval","rmath","constants","utils","arithmetic","algebra","misc","onlyInfinity","x","isFinite","lo","hi","handleNegative","interval","Infinity","n","Math","ceil","PI_TWICE_LOW","cos","isEmpty","EMPTY","cache","set","pi2","PI_TWICE","t","fmod","width","PI_HIGH","cosv","sub","PI","negative","rlo","cosLo","rhi","cosHi","PI_LOW","max","sin","PI_HALF","tan","pi","PI_HALF_LOW","WHOLE","tanLo","tanHi","asin","PI_HALF_HIGH","asinLo","asinHi","acos","acosLo","acosHi","atan","atanLo","atanHi","sinh","sinhLo","sinhHi","cosh","coshLo","coshHi","tanh","tanhLo","tanhHi"],"sources":["../../src/operations/trigonometric.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}