{"ast":null,"code":"'use strict';\n\nvar UnaryOperators = require('../misc/UnaryOperators');\n\nmodule.exports = function (node) {\n  if (this.options.raw) {\n    return node.op + this.next(node.argument);\n  }\n\n  if (!(node.op in UnaryOperators)) {\n    throw new SyntaxError(node.op + ' not implemented');\n  }\n\n  var namedOperator = UnaryOperators[node.op];\n  /* eslint-disable new-cap */\n\n  return this.FunctionNode({\n    name: namedOperator,\n    args: [node.argument]\n  });\n  /* eslint-enable new-cap */\n};","map":{"version":3,"names":["UnaryOperators","require","module","exports","node","options","raw","op","next","argument","SyntaxError","namedOperator","FunctionNode","name","args"],"sources":["/home/programowanie/newton-rhapson/newton/node_modules/math-codegen/lib/node/UnaryNode.js"],"sourcesContent":["'use strict'\n\nvar UnaryOperators = require('../misc/UnaryOperators')\n\nmodule.exports = function (node) {\n  if (this.options.raw) {\n    return node.op + this.next(node.argument)\n  }\n\n  if (!(node.op in UnaryOperators)) {\n    throw new SyntaxError(node.op + ' not implemented')\n  }\n\n  var namedOperator = UnaryOperators[node.op]\n  /* eslint-disable new-cap */\n  return this.FunctionNode({\n    name: namedOperator,\n    args: [node.argument]\n  })\n  /* eslint-enable new-cap */\n}\n"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,wBAAD,CAA5B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;EAC/B,IAAI,KAAKC,OAAL,CAAaC,GAAjB,EAAsB;IACpB,OAAOF,IAAI,CAACG,EAAL,GAAU,KAAKC,IAAL,CAAUJ,IAAI,CAACK,QAAf,CAAjB;EACD;;EAED,IAAI,EAAEL,IAAI,CAACG,EAAL,IAAWP,cAAb,CAAJ,EAAkC;IAChC,MAAM,IAAIU,WAAJ,CAAgBN,IAAI,CAACG,EAAL,GAAU,kBAA1B,CAAN;EACD;;EAED,IAAII,aAAa,GAAGX,cAAc,CAACI,IAAI,CAACG,EAAN,CAAlC;EACA;;EACA,OAAO,KAAKK,YAAL,CAAkB;IACvBC,IAAI,EAAEF,aADiB;IAEvBG,IAAI,EAAE,CAACV,IAAI,CAACK,QAAN;EAFiB,CAAlB,CAAP;EAIA;AACD,CAhBD"},"metadata":{},"sourceType":"script"}