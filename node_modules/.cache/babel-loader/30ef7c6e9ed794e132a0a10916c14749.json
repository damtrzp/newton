{"ast":null,"code":"import { create, all, evaluate } from 'mathjs';\nimport TangentToGraph from './tangentLine'; // math.js\n\nvar config = {\n  epsilon: 1e-12,\n  matrix: 'Matrix',\n  number: 'number',\n  precision: 64,\n  predictable: false,\n  randomSeed: null\n};\nvar math = create(all, config);\nvar chartProperties = {\n  options: {\n    elements: {\n      point: {\n        radius: 0\n      }\n    },\n    responsive: true,\n    scales: {\n      y: {\n        min: -50,\n        max: 250\n      },\n      x: {\n        min: -250,\n        max: 500\n      }\n    },\n    // The x axis (Line at y=0)\n    plugins: {\n      autocolors: false,\n      annotation: {\n        annotations: {\n          xAxis: {\n            type: 'line',\n            yMin: 0,\n            yMax: 0,\n            borderColor: '#383838'\n          }\n        }\n      },\n      zoom: {\n        zoom: {\n          wheel: {\n            enabled: true\n          },\n          pinch: {\n            enabled: true\n          },\n          mode: 'xy'\n        }\n      }\n    }\n  },\n  plugins: [{\n    beforeUpdate: function beforeUpdate(chart) {\n      var data = chart.config.data;\n\n      for (var j = 0; j < data.datasets.length; j++) {\n        for (var i = 0; i < data.labels.length; i++) {\n          var f = data.datasets[j].function;\n          var x = data.labels[i];\n          var y = void 0;\n          y = math.evaluate(f, {\n            x: x\n          }); // Check if the dataset is the tangent function\n\n          if (j == 1) {\n            var a = data.datasets[j].curApprox;\n            var L = TangentToGraph(f, a, data.datasets[j].derivative);\n            y = math.evaluate(L, {\n              x: x\n            });\n          }\n\n          data.datasets[j].data.push(y);\n        }\n      }\n    }\n  }]\n};\nexport default chartProperties;","map":{"version":3,"names":["create","all","evaluate","TangentToGraph","config","epsilon","matrix","number","precision","predictable","randomSeed","math","chartProperties","options","elements","point","radius","responsive","scales","y","min","max","x","plugins","autocolors","annotation","annotations","xAxis","type","yMin","yMax","borderColor","zoom","wheel","enabled","pinch","mode","beforeUpdate","chart","data","j","datasets","length","i","labels","f","function","a","curApprox","L","derivative","push"],"sources":["/home/programowanie/newton-rhapson/newton/src/ChartProperties.js"],"sourcesContent":["import { create, all, evaluate } from 'mathjs'\nimport TangentToGraph from './tangentLine';\n\n// math.js\nconst config = {\n  epsilon: 1e-12,\n  matrix: 'Matrix',\n  number: 'number',\n  precision: 64,\n  predictable: false,\n  randomSeed: null\n}\nconst math = create(all, config)\n\nlet chartProperties = {\n    options: {\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        responsive: true,\n        scales: {\n          y: {\n            min: -50,\n            max: 250 \n          },\n          x: {\n            min: -250,\n            max: 500\n          },\n        },\n        // The x axis (Line at y=0)\n        plugins: {\n          autocolors: false,\n          annotation: {\n            annotations: {\n              xAxis: {\n                type: 'line',\n                yMin: 0,\n                yMax: 0,\n                borderColor: '#383838'\n              }\n            }\n          },\n          zoom: {\n            zoom: {\n              wheel: {\n                enabled: true,\n              },\n              pinch: {\n                enabled: true\n              },\n              mode: 'xy',\n            }\n          }\n        }\n      },\n      plugins: [{\n        beforeUpdate: function(chart) {\n          let data = chart.config.data;\n          for(let j = 0; j < data.datasets.length; j++) {\n            for(let i = 0; i < data.labels.length; i++) {\n              let f = data.datasets[j].function;\n              \n              let x = data.labels[i];\n              let y;\n  \n              y = math.evaluate(f, {x: x});\n              // Check if the dataset is the tangent function\n              if(j == 1) {\n                let a = data.datasets[j].curApprox;\n  \n  \n                let L = TangentToGraph(f, a, data.datasets[j].derivative);\n                \n  \n                y = math.evaluate(L, {x:x});\n              }\n              \n  \n              data.datasets[j].data.push(y);\n            }\n          }\n        },\n    }],\n    \n}\n\nexport default chartProperties;"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,GAAjB,EAAsBC,QAAtB,QAAsC,QAAtC;AACA,OAAOC,cAAP,MAA2B,eAA3B,C,CAEA;;AACA,IAAMC,MAAM,GAAG;EACbC,OAAO,EAAE,KADI;EAEbC,MAAM,EAAE,QAFK;EAGbC,MAAM,EAAE,QAHK;EAIbC,SAAS,EAAE,EAJE;EAKbC,WAAW,EAAE,KALA;EAMbC,UAAU,EAAE;AANC,CAAf;AAQA,IAAMC,IAAI,GAAGX,MAAM,CAACC,GAAD,EAAMG,MAAN,CAAnB;AAEA,IAAIQ,eAAe,GAAG;EAClBC,OAAO,EAAE;IACLC,QAAQ,EAAE;MACRC,KAAK,EAAE;QACLC,MAAM,EAAE;MADH;IADC,CADL;IAMLC,UAAU,EAAE,IANP;IAOLC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,GAAG,EAAE,CAAC,EADL;QAEDC,GAAG,EAAE;MAFJ,CADG;MAKNC,CAAC,EAAE;QACDF,GAAG,EAAE,CAAC,GADL;QAEDC,GAAG,EAAE;MAFJ;IALG,CAPH;IAiBL;IACAE,OAAO,EAAE;MACPC,UAAU,EAAE,KADL;MAEPC,UAAU,EAAE;QACVC,WAAW,EAAE;UACXC,KAAK,EAAE;YACLC,IAAI,EAAE,MADD;YAELC,IAAI,EAAE,CAFD;YAGLC,IAAI,EAAE,CAHD;YAILC,WAAW,EAAE;UAJR;QADI;MADH,CAFL;MAYPC,IAAI,EAAE;QACJA,IAAI,EAAE;UACJC,KAAK,EAAE;YACLC,OAAO,EAAE;UADJ,CADH;UAIJC,KAAK,EAAE;YACLD,OAAO,EAAE;UADJ,CAJH;UAOJE,IAAI,EAAE;QAPF;MADF;IAZC;EAlBJ,CADS;EA4ChBb,OAAO,EAAE,CAAC;IACRc,YAAY,EAAE,sBAASC,KAAT,EAAgB;MAC5B,IAAIC,IAAI,GAAGD,KAAK,CAAClC,MAAN,CAAamC,IAAxB;;MACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,IAAI,CAACE,QAAL,CAAcC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;QAC5C,KAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGJ,IAAI,CAACK,MAAL,CAAYF,MAA/B,EAAuCC,CAAC,EAAxC,EAA4C;UAC1C,IAAIE,CAAC,GAAGN,IAAI,CAACE,QAAL,CAAcD,CAAd,EAAiBM,QAAzB;UAEA,IAAIxB,CAAC,GAAGiB,IAAI,CAACK,MAAL,CAAYD,CAAZ,CAAR;UACA,IAAIxB,CAAC,SAAL;UAEAA,CAAC,GAAGR,IAAI,CAACT,QAAL,CAAc2C,CAAd,EAAiB;YAACvB,CAAC,EAAEA;UAAJ,CAAjB,CAAJ,CAN0C,CAO1C;;UACA,IAAGkB,CAAC,IAAI,CAAR,EAAW;YACT,IAAIO,CAAC,GAAGR,IAAI,CAACE,QAAL,CAAcD,CAAd,EAAiBQ,SAAzB;YAGA,IAAIC,CAAC,GAAG9C,cAAc,CAAC0C,CAAD,EAAIE,CAAJ,EAAOR,IAAI,CAACE,QAAL,CAAcD,CAAd,EAAiBU,UAAxB,CAAtB;YAGA/B,CAAC,GAAGR,IAAI,CAACT,QAAL,CAAc+C,CAAd,EAAiB;cAAC3B,CAAC,EAACA;YAAH,CAAjB,CAAJ;UACD;;UAGDiB,IAAI,CAACE,QAAL,CAAcD,CAAd,EAAiBD,IAAjB,CAAsBY,IAAtB,CAA2BhC,CAA3B;QACD;MACF;IACF;EA1BO,CAAD;AA5CO,CAAtB;AA2EA,eAAeP,eAAf"},"metadata":{},"sourceType":"module"}