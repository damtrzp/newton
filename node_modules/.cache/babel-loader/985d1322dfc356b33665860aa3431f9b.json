{"ast":null,"code":"'use strict';\n\nvar Operators = require('../misc/Operators');\n\nmodule.exports = function (node) {\n  if (this.options.raw) {\n    return ['(' + this.next(node.args[0]), node.op, this.next(node.args[1]) + ')'].join(' ');\n  }\n\n  var namedOperator = Operators[node.op];\n\n  if (!namedOperator) {\n    throw TypeError('unidentified operator');\n  }\n  /* eslint-disable new-cap */\n\n\n  return this.FunctionNode({\n    name: namedOperator,\n    args: node.args\n  });\n  /* eslint-enable new-cap */\n};","map":{"version":3,"names":["Operators","require","module","exports","node","options","raw","next","args","op","join","namedOperator","TypeError","FunctionNode","name"],"sources":["/home/programowanie/newton-rhapson/newton/node_modules/math-codegen/lib/node/OperatorNode.js"],"sourcesContent":["'use strict'\n\nvar Operators = require('../misc/Operators')\n\nmodule.exports = function (node) {\n  if (this.options.raw) {\n    return ['(' + this.next(node.args[0]), node.op, this.next(node.args[1]) + ')'].join(' ')\n  }\n\n  var namedOperator = Operators[node.op]\n\n  if (!namedOperator) {\n    throw TypeError('unidentified operator')\n  }\n\n  /* eslint-disable new-cap */\n  return this.FunctionNode({\n    name: namedOperator,\n    args: node.args\n  })\n  /* eslint-enable new-cap */\n}\n"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,mBAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;EAC/B,IAAI,KAAKC,OAAL,CAAaC,GAAjB,EAAsB;IACpB,OAAO,CAAC,MAAM,KAAKC,IAAL,CAAUH,IAAI,CAACI,IAAL,CAAU,CAAV,CAAV,CAAP,EAAgCJ,IAAI,CAACK,EAArC,EAAyC,KAAKF,IAAL,CAAUH,IAAI,CAACI,IAAL,CAAU,CAAV,CAAV,IAA0B,GAAnE,EAAwEE,IAAxE,CAA6E,GAA7E,CAAP;EACD;;EAED,IAAIC,aAAa,GAAGX,SAAS,CAACI,IAAI,CAACK,EAAN,CAA7B;;EAEA,IAAI,CAACE,aAAL,EAAoB;IAClB,MAAMC,SAAS,CAAC,uBAAD,CAAf;EACD;EAED;;;EACA,OAAO,KAAKC,YAAL,CAAkB;IACvBC,IAAI,EAAEH,aADiB;IAEvBH,IAAI,EAAEJ,IAAI,CAACI;EAFY,CAAlB,CAAP;EAIA;AACD,CAjBD"},"metadata":{},"sourceType":"script"}