{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst d3_selection_1 = require(\"d3-selection\");\n\nconst eval_1 = require(\"./eval\");\n\nconst datum_defaults_1 = __importDefault(require(\"../datum-defaults\"));\n\nconst graph_types_1 = require(\"../graph-types/\");\n\nfunction secant(chart) {\n  const secantDefaults = datum_defaults_1.default({\n    isHelper: true,\n    skipTip: true,\n    skipBoundsCheck: true,\n    nSamples: 2,\n    graphType: 'polyline'\n  });\n\n  function computeSlope(scope) {\n    scope.m = (scope.y1 - scope.y0) / (scope.x1 - scope.x0);\n  }\n\n  function updateLine(d, secant) {\n    if (!('x0' in secant)) {\n      throw Error('secant must have the property `x0` defined');\n    }\n\n    secant.scope = secant.scope || {};\n    const x0 = secant.x0;\n    const x1 = typeof secant.x1 === 'number' ? secant.x1 : Infinity;\n    Object.assign(secant.scope, {\n      x0: x0,\n      x1: x1,\n      y0: eval_1.builtIn(d, 'fn', {\n        x: x0\n      }),\n      y1: eval_1.builtIn(d, 'fn', {\n        x: x1\n      })\n    });\n    computeSlope(secant.scope);\n  }\n\n  function setFn(d, secant) {\n    updateLine(d, secant);\n    secant.fn = 'm * (x - x0) + y0';\n  }\n\n  function setMouseListener(d, secantObject) {\n    const self = this;\n\n    if (secantObject.updateOnMouseMove && !secantObject.$$mouseListener) {\n      secantObject.$$mouseListener = function (_ref) {\n        let {\n          x\n        } = _ref;\n        secantObject.x1 = x;\n        updateLine(d, secantObject);\n        secant(self);\n      };\n\n      chart.on('tip:update', secantObject.$$mouseListener);\n    }\n  }\n\n  function computeLines(d) {\n    const self = this;\n    const data = [];\n    d.secants = d.secants || [];\n\n    for (let i = 0; i < d.secants.length; i += 1) {\n      const secant = d.secants[i] = Object.assign({}, secantDefaults, d.secants[i]); // necessary to make the secant have the same color as d\n\n      secant.index = d.index;\n\n      if (!secant.fn) {\n        setFn.call(self, d, secant);\n        setMouseListener.call(self, d, secant);\n      }\n\n      data.push(secant);\n    }\n\n    return data;\n  }\n\n  const secant = function (selection) {\n    selection.each(function (d) {\n      const el = d3_selection_1.select(this);\n      const data = computeLines.call(selection, d);\n      const innerSelection = el.selectAll('g.secant').data(data);\n      const innerSelectionEnter = innerSelection.enter().append('g').attr('class', 'secant'); // enter + update\n\n      innerSelection.merge(innerSelectionEnter).call(graph_types_1.polyline(chart)); // change the opacity of the secants\n\n      innerSelection.merge(innerSelectionEnter).selectAll('path').attr('opacity', 0.5); // exit\n\n      innerSelection.exit().remove();\n    });\n  };\n\n  return secant;\n}\n\nexports.default = secant;","map":{"version":3,"mappings":"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","names":["secant","chart","secantDefaults","datum_defaults_1","isHelper","skipTip","skipBoundsCheck","nSamples","graphType","computeSlope","scope","m","y1","y0","x1","x0","updateLine","d","Error","Infinity","Object","assign","eval_1","x","setFn","fn","setMouseListener","secantObject","self","updateOnMouseMove","$$mouseListener","on","computeLines","data","secants","i","length","index","call","push","selection","each","el","d3_selection_1","innerSelection","selectAll","innerSelectionEnter","enter","append","attr","merge","graph_types_1","exit","remove","exports"],"sources":["../../src/helpers/secant.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}