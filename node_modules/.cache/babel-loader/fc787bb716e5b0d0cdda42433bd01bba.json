{"ast":null,"code":"import _classCallCheck from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/programowanie/newton-rhapson/newton/src/Plot.js\";\nimport { Chart } from 'chart.js';\nimport React, { Component } from 'react';\nChart.defaults.font.size = 16;\nChart.defaults.color = \"#bbb\";\nvar initialxAxisLabels = [];\n\nfor (var i = -500; i < 500; i++) {\n  var label = i / 100;\n  xAxisLabels.push(label);\n}\n\nfunction polynomial(x) {\n  return x * x * x + 5 * (x * x) + 3 * x + 5;\n}\n\nfunction derivativeData(x, fn, xLabels) {\n  var data = [];\n\n  for (var _i = 0; _i < xLabels.length; _i++) {\n    var derivativeValue = void 0;\n  }\n}\n\nvar Plot = /*#__PURE__*/function (_Component) {\n  _inherits(Plot, _Component);\n\n  function Plot(props) {\n    var _this;\n\n    _classCallCheck(this, Plot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Plot).call(this, props));\n    var state = {\n      xAxisLabels: initialxAxisLabels,\n      yData: []\n    };\n    return _this;\n  }\n\n  _createClass(Plot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var ctx = document.getElementById(\"plotCanvas\").getContext(\"2d\");\n      var plot = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: this.xAxisLabels,\n          datasets: [{\n            label: \"f(x)=x³ + 5x² + 3x + 2\",\n            borderColor: \"blue\",\n            function: polynomial,\n            data: []\n          }]\n        },\n        plugins: [{\n          beforeInit: function beforeInit(chart) {\n            var data = chart.config.data;\n\n            for (var _i2 = 0; _i2 < data.labels.length; _i2++) {\n              var f = data.datasets[0].function;\n              var x = data.labels[_i2];\n              var y = f(x);\n              data.datasets[0].data.push(y);\n            }\n          }\n        }],\n        options: {\n          elements: {\n            point: {\n              radius: 0\n            }\n          },\n          responsive: true\n        }\n      });\n      plot.update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        id: \"plotCanvas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Plot;\n}(Component);\n\nexport { Plot as default };","map":{"version":3,"names":["Chart","React","Component","defaults","font","size","color","initialxAxisLabels","i","label","xAxisLabels","push","polynomial","x","derivativeData","fn","xLabels","data","length","derivativeValue","Plot","props","state","yData","ctx","document","getElementById","getContext","plot","type","labels","datasets","borderColor","function","plugins","beforeInit","chart","config","f","y","options","elements","point","radius","responsive","update"],"sources":["/home/programowanie/newton-rhapson/newton/src/Plot.js"],"sourcesContent":["import { Chart } from 'chart.js'\nimport React, { Component } from 'react'\n\nChart.defaults.font.size = 16;\nChart.defaults.color = \"#bbb\";\n\nlet initialxAxisLabels = [];\nfor(let i = -500; i < 500; i++) {\n  let label = i/100;\n  xAxisLabels.push(label);\n}\n\nfunction polynomial(x) {\n  return x*x*x + 5*(x*x) + 3*x + 5;\n}\nfunction derivativeData(x,fn, xLabels) {\n  let data = [];\n  for(let i = 0; i < xLabels.length; i++) {\n    let derivativeValue;\n  }\n}\n\nexport default class Plot extends Component {\n  constructor(props) {\n    super(props);\n    let state = {\n      xAxisLabels: initialxAxisLabels,\n      yData: []\n    }\n  }\n\n  componentDidMount() {\n    let ctx = document.getElementById(\"plotCanvas\").getContext(\"2d\");\n    let plot = new Chart(ctx, {\n      type: \"line\",\n      data : {\n        labels: this.xAxisLabels,\n        datasets: [{\n          label: \"f(x)=x³ + 5x² + 3x + 2\",\n          borderColor: \"blue\",\n          function: polynomial,\n          data: [],\n        }\n      ]\n      },\n      plugins: [{\n        beforeInit: function(chart) {\n          let data = chart.config.data;\n      \n          for(let i = 0; i < data.labels.length; i++) {\n            let f = data.datasets[0].function;\n            let x = data.labels[i];\n            let y = f(x);\n\n            data.datasets[0].data.push(y);\n          }\n        }\n    }],\n    options: {\n      elements: {\n        point: {\n          radius: 0\n        }\n      },\n      responsive: true\n    }\n    })\n    plot.update();\n  }\n\n\n  render() {\n    \n\n\n    return (\n      <canvas id=\"plotCanvas\">\n\n      </canvas>\n    )\n  }\n}\n\n\n\n\n"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,UAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEAF,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBC,IAApB,GAA2B,EAA3B;AACAL,KAAK,CAACG,QAAN,CAAeG,KAAf,GAAuB,MAAvB;AAEA,IAAIC,kBAAkB,GAAG,EAAzB;;AACA,KAAI,IAAIC,CAAC,GAAG,CAAC,GAAb,EAAkBA,CAAC,GAAG,GAAtB,EAA2BA,CAAC,EAA5B,EAAgC;EAC9B,IAAIC,KAAK,GAAGD,CAAC,GAAC,GAAd;EACAE,WAAW,CAACC,IAAZ,CAAiBF,KAAjB;AACD;;AAED,SAASG,UAAT,CAAoBC,CAApB,EAAuB;EACrB,OAAOA,CAAC,GAACA,CAAF,GAAIA,CAAJ,GAAQ,KAAGA,CAAC,GAACA,CAAL,CAAR,GAAkB,IAAEA,CAApB,GAAwB,CAA/B;AACD;;AACD,SAASC,cAAT,CAAwBD,CAAxB,EAA0BE,EAA1B,EAA8BC,OAA9B,EAAuC;EACrC,IAAIC,IAAI,GAAG,EAAX;;EACA,KAAI,IAAIT,EAAC,GAAG,CAAZ,EAAeA,EAAC,GAAGQ,OAAO,CAACE,MAA3B,EAAmCV,EAAC,EAApC,EAAwC;IACtC,IAAIW,eAAe,SAAnB;EACD;AACF;;IAEoBC,I;;;EACnB,cAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0EAAMA,KAAN;IACA,IAAIC,KAAK,GAAG;MACVZ,WAAW,EAAEH,kBADH;MAEVgB,KAAK,EAAE;IAFG,CAAZ;IAFiB;EAMlB;;;;wCAEmB;MAClB,IAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,UAAtC,CAAiD,IAAjD,CAAV;MACA,IAAIC,IAAI,GAAG,IAAI5B,KAAJ,CAAUwB,GAAV,EAAe;QACxBK,IAAI,EAAE,MADkB;QAExBZ,IAAI,EAAG;UACLa,MAAM,EAAE,KAAKpB,WADR;UAELqB,QAAQ,EAAE,CAAC;YACTtB,KAAK,EAAE,wBADE;YAETuB,WAAW,EAAE,MAFJ;YAGTC,QAAQ,EAAErB,UAHD;YAITK,IAAI,EAAE;UAJG,CAAD;QAFL,CAFiB;QAYxBiB,OAAO,EAAE,CAAC;UACRC,UAAU,EAAE,oBAASC,KAAT,EAAgB;YAC1B,IAAInB,IAAI,GAAGmB,KAAK,CAACC,MAAN,CAAapB,IAAxB;;YAEA,KAAI,IAAIT,GAAC,GAAG,CAAZ,EAAeA,GAAC,GAAGS,IAAI,CAACa,MAAL,CAAYZ,MAA/B,EAAuCV,GAAC,EAAxC,EAA4C;cAC1C,IAAI8B,CAAC,GAAGrB,IAAI,CAACc,QAAL,CAAc,CAAd,EAAiBE,QAAzB;cACA,IAAIpB,CAAC,GAAGI,IAAI,CAACa,MAAL,CAAYtB,GAAZ,CAAR;cACA,IAAI+B,CAAC,GAAGD,CAAC,CAACzB,CAAD,CAAT;cAEAI,IAAI,CAACc,QAAL,CAAc,CAAd,EAAiBd,IAAjB,CAAsBN,IAAtB,CAA2B4B,CAA3B;YACD;UACF;QAXO,CAAD,CAZe;QAyB1BC,OAAO,EAAE;UACPC,QAAQ,EAAE;YACRC,KAAK,EAAE;cACLC,MAAM,EAAE;YADH;UADC,CADH;UAMPC,UAAU,EAAE;QANL;MAzBiB,CAAf,CAAX;MAkCAhB,IAAI,CAACiB,MAAL;IACD;;;6BAGQ;MAIP,oBACE;QAAQ,EAAE,EAAC,YAAX;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF;IAKD;;;;EA1D+B3C,S;;SAAbkB,I"},"metadata":{},"sourceType":"module"}