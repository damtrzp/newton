{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst clamp_1 = __importDefault(require(\"clamp\"));\n\nconst utils_1 = __importDefault(require(\"../utils\"));\n\nconst eval_1 = require(\"../helpers/eval\");\n\nfunction checkAsymptote(d0, d1, d, sign, level) {\n  if (!level) {\n    return {\n      asymptote: true,\n      d0: d0,\n      d1: d1\n    };\n  }\n\n  const n = 10;\n  const x0 = d0[0];\n  const x1 = d1[0];\n  const samples = utils_1.default.linspace(x0, x1, n);\n  let oldY, oldX;\n\n  for (let i = 0; i < n; i += 1) {\n    const x = samples[i];\n    const y = eval_1.builtIn(d, 'fn', {\n      x: x\n    });\n\n    if (i && oldY) {\n      const deltaY = y - oldY;\n      const newSign = utils_1.default.sgn(deltaY);\n\n      if (newSign === sign) {\n        return checkAsymptote([oldX, oldY], [x, y], d, sign, level - 1);\n      }\n    }\n\n    oldY = y;\n    oldX = x;\n  }\n\n  return {\n    asymptote: false,\n    d0: d0,\n    d1: d1\n  };\n}\n/**\n * Splits the evaluated data into arrays, each array is separated by any asymptote found\n * through the process of detecting slope/sign brusque changes\n * @param chart\n * @param d\n * @param data\n * @returns {Array[]}\n */\n\n\nfunction split(chart, d, data) {\n  let i, oldSign;\n  let deltaX;\n  let st = [];\n  const sets = [];\n  const domain = chart.meta.yScale.domain();\n  const yMin = domain[0];\n  const yMax = domain[1];\n\n  if (data[0]) {\n    st.push(data[0]);\n    deltaX = data[1][0] - data[0][0];\n    oldSign = utils_1.default.sgn(data[1][1] - data[0][1]);\n  }\n\n  function updateY(d) {\n    d[1] = Math.min(d[1], yMax);\n    d[1] = Math.max(d[1], yMin);\n    return d;\n  }\n\n  i = 1;\n\n  while (i < data.length) {\n    const y0 = data[i - 1][1];\n    const y1 = data[i][1];\n    const deltaY = y1 - y0;\n    const newSign = utils_1.default.sgn(deltaY); // make a new set if:\n\n    if ( // utils.sgn(y1) * utils.sgn(y0) < 0 && // there's a change in the evaluated values sign\n    // there's a change in the slope sign\n    oldSign !== newSign && // the slope is bigger to some value (according to the current zoom scale)\n    Math.abs(deltaY / deltaX) > 1 / 1) {\n      // retest this section again and determine if it's an asymptote\n      const check = checkAsymptote(data[i - 1], data[i], d, newSign, 3);\n\n      if (check.asymptote) {\n        st.push(updateY(check.d0));\n        sets.push(st);\n        st = [updateY(check.d1)];\n      }\n    }\n\n    oldSign = newSign;\n    st.push(data[i]);\n    ++i;\n  }\n\n  if (st.length) {\n    sets.push(st);\n  }\n\n  return sets;\n}\n\nfunction linear(chart, d, range, n) {\n  const allX = utils_1.default.space(chart, range, n);\n  const yDomain = chart.meta.yScale.domain();\n  const yDomainMargin = yDomain[1] - yDomain[0];\n  const yMin = yDomain[0] - yDomainMargin * 1e5;\n  const yMax = yDomain[1] + yDomainMargin * 1e5;\n  let data = [];\n\n  for (let i = 0; i < allX.length; i += 1) {\n    const x = allX[i];\n    const y = eval_1.builtIn(d, 'fn', {\n      x: x\n    });\n\n    if (utils_1.default.isValidNumber(x) && utils_1.default.isValidNumber(y)) {\n      data.push([x, clamp_1.default(y, yMin, yMax)]);\n    }\n  }\n\n  data = split(chart, d, data);\n  return data;\n}\n\nfunction parametric(chart, d, range, nSamples) {\n  // range is mapped to canvas coordinates from the input\n  // for parametric plots the range will tell the start/end points of the `t` param\n  const parametricRange = d.range || [0, 2 * Math.PI];\n  const tCoords = utils_1.default.space(chart, parametricRange, nSamples);\n  const samples = [];\n\n  for (let i = 0; i < tCoords.length; i += 1) {\n    const t = tCoords[i];\n    const x = eval_1.builtIn(d, 'x', {\n      t: t\n    });\n    const y = eval_1.builtIn(d, 'y', {\n      t: t\n    });\n    samples.push([x, y]);\n  }\n\n  return [samples];\n}\n\nfunction polar(chart, d, range, nSamples) {\n  // range is mapped to canvas coordinates from the input\n  // for polar plots the range will tell the start/end points of the `theta` param\n  const polarRange = d.range || [-Math.PI, Math.PI];\n  const thetaSamples = utils_1.default.space(chart, polarRange, nSamples);\n  const samples = [];\n\n  for (let i = 0; i < thetaSamples.length; i += 1) {\n    const theta = thetaSamples[i];\n    const r = eval_1.builtIn(d, 'r', {\n      theta: theta\n    });\n    const x = r * Math.cos(theta);\n    const y = r * Math.sin(theta);\n    samples.push([x, y]);\n  }\n\n  return [samples];\n}\n\nfunction points(chart, d, range, nSamples) {\n  return [d.points];\n}\n\nfunction vector(chart, d, range, nSamples) {\n  d.offset = d.offset || [0, 0];\n  return [[d.offset, [d.vector[0] + d.offset[0], d.vector[1] + d.offset[1]]]];\n}\n\nconst sampler = function (chart, d, range, nSamples) {\n  const fnTypes = {\n    parametric: parametric,\n    polar: polar,\n    points: points,\n    vector: vector,\n    linear: linear\n  };\n\n  if (!(d.fnType in fnTypes)) {\n    throw Error(d.fnType + ' is not supported in the `builtIn` sampler');\n  } // @ts-ignore\n\n\n  return fnTypes[d.fnType].apply(null, arguments);\n};\n\nexports.default = sampler;","map":{"version":3,"mappings":"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","names":["checkAsymptote","d0","d1","d","sign","level","asymptote","n","x0","x1","samples","utils_1","linspace","oldY","oldX","i","x","y","eval_1","deltaY","newSign","sgn","split","chart","data","oldSign","deltaX","st","sets","domain","meta","yScale","yMin","yMax","push","updateY","Math","min","max","length","y0","y1","abs","check","linear","range","allX","space","yDomain","yDomainMargin","isValidNumber","clamp_1","parametric","nSamples","parametricRange","PI","tCoords","t","polar","polarRange","thetaSamples","theta","r","cos","sin","points","vector","offset","sampler","fnTypes","fnType","Error","apply","arguments","exports"],"sources":["../../src/samplers/builtIn.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}