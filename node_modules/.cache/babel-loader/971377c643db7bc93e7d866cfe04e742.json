{"ast":null,"code":"import _defineProperty from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/programowanie/newton-rhapson/newton/src/Plot.js\";\nimport { Chart } from 'chart.js';\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport chartProperties from './ChartProperties';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport { derivative, random } from 'mathjs';\nimport { create, all, evaluate } from 'mathjs';\nimport randomPolynomial from './randomPolynomial';\nimport TangentToGraph from './tangentLine'; // math.js\n\nvar config = {\n  epsilon: 1e-12,\n  matrix: 'Matrix',\n  number: 'number',\n  precision: 64,\n  predictable: false,\n  randomSeed: null\n};\nvar math = create(all, config);\nChart.register(annotationPlugin);\nChart.register(zoomPlugin);\nChart.defaults.font.size = 16;\nChart.defaults.color = \"#bbb\";\nvar initialxAxisLabels = [];\n\nfor (var i = -50; i < 50; i++) {\n  var label = i / 10;\n  initialxAxisLabels.push(label);\n}\n\nvar Plot = /*#__PURE__*/function (_Component) {\n  _inherits(Plot, _Component);\n\n  function Plot(props) {\n    var _this;\n\n    _classCallCheck(this, Plot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Plot).call(this, props));\n    var initFunc = randomPolynomial();\n    var initDerivative = derivative(initFunc, \"x\");\n    _this.state = {\n      xAxisLabels: initialxAxisLabels,\n      yData: [],\n      //fn: \"x^3 + 5x^2 + 3x + 2\"\n      fn: initFunc,\n      derivative: initDerivative,\n      curApprox: 2,\n      plugins: {\n        autocolors: false,\n        annotation: {\n          annotations: {\n            // The x axis (Line at y=0)\n            xAxis: {\n              type: 'line',\n              yMin: 0,\n              yMax: 0,\n              borderColor: '#383838'\n            },\n            prevApprox: {\n              type: 'point',\n              backgroundColor: 'rgba(255, 99, 132, 0.25)'\n            },\n            curApprox: {\n              type: 'point',\n              backgroundColor: 'rgba(255, 99, 132, 0.25)'\n            }\n          }\n        }\n        /*\n        zoom: {\n          zoom: {\n            wheel: {\n              enabled: true,\n            },\n            pan: {\n              enabled: true,\n              mode: \"xy\"\n            },\n            pinch: {\n              enabled: true\n            },\n            mode: 'xy',\n          }\n        }\n        */\n\n      }\n    };\n    _this.chartRef = React.createRef();\n    _this.nextIteration = _this.nextIteration.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.randomizePolynomial = _this.randomizePolynomial.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setFunction = _this.setFunction.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setApprox = _this.setApprox.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Plot, [{\n    key: \"setFunction\",\n    value: function setFunction(f) {\n      var fprime = derivative(f, \"x\"); // Update the chart\n\n      var yData = [];\n      var tangentData = [];\n\n      for (var _i = 0; _i < this.state.xAxisLabels.length; _i++) {\n        var x = this.state.xAxisLabels[_i];\n        yData.push(math.evaluate(f, {\n          x: x\n        }));\n        var a = this.state.curApprox;\n        var L = TangentToGraph(f, a, this.state.derivative);\n        tangentData.push(math.evaluate(L, {\n          x: x\n        }));\n        this.setState({\n          yData: yData,\n          tangentData: tangentData,\n          fn: f,\n          derivative: fprime\n        });\n      }\n    }\n  }, {\n    key: \"randomizePolynomial\",\n    value: function randomizePolynomial() {\n      this.setFunction(randomPolynomial());\n    }\n  }, {\n    key: \"setApprox\",\n    value: function setApprox(e) {\n      this.setState({\n        curApprox: e.target.value\n      });\n    }\n  }, {\n    key: \"nextIteration\",\n    value: function nextIteration() {\n      // nextApprox = curApprox - f(curApprox)/f'(curApprox)\n      var curApprox = this.state.curApprox;\n      var f = this.state.fn;\n      var nextApprox = curApprox - evaluate(f, {\n        x: curApprox\n      }) / evaluate(this.state.derivative.toString(), {\n        x: curApprox\n      });\n      this.setState(function (prevState) {\n        return {\n          plugins: _objectSpread({}, prevState.plugins, {\n            annotation: _objectSpread({}, prevState.plugins.annotation, {\n              annotations: _objectSpread({}, prevState.plugins.annotation.annotations, {\n                curApprox: {\n                  type: 'point',\n                  xValue: curApprox,\n                  yValue: evaluate(f, {\n                    x: curApprox\n                  }),\n                  backgroundColor: 'rgba(255, 99, 132, 0.25)'\n                },\n                nextApprox: {\n                  type: 'point',\n                  xValue: nextApprox,\n                  yValue: evaluate(f, {\n                    x: nextApprox\n                  }),\n                  backgroundColor: 'rgba(255, 99, 132, 0.25)'\n                }\n              })\n            })\n          })\n        };\n      });\n      this.setState({\n        nextApprox: curApprox,\n        curApprox: nextApprox\n      }); // Trigger a chart refresh\n\n      this.setFunction(this.state.fn);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      var data = {\n        labels: this.state.xAxisLabels,\n        // The function\n        datasets: [{\n          label: this.state.fn,\n          borderColor: \"blue\",\n          function: this.state.fn,\n          data: this.state.yData\n        }, // The function's tangent line\n        {\n          label: \"Tangent\",\n          borderColor: \"gray\",\n          function: this.state.fn,\n          // The function is later manipulated in the plugin for it to be a tangent line\n          derivative: this.state.derivative,\n          data: this.state.tangentData,\n          curApprox: this.state.curApprox\n        }]\n      };\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Line, (_React$createElement = {\n        ref: this.chartRef,\n        plugins: this.state.plugins,\n        options: chartProperties.options,\n        data: data\n      }, _defineProperty(_React$createElement, \"plugins\", chartProperties.plugins), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }), _React$createElement)), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.nextIteration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, \"Next Iteration\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.randomizePolynomial,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      }, \"Randomize Polynomial\"), /*#__PURE__*/React.createElement(\"input\", {\n        placeholder: \"Initial approximation\",\n        onChange: this.setApprox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Plot;\n}(Component);\n\nexport { Plot as default };","map":{"version":3,"names":["Chart","React","Component","Line","chartProperties","annotationPlugin","zoomPlugin","derivative","random","create","all","evaluate","randomPolynomial","TangentToGraph","config","epsilon","matrix","number","precision","predictable","randomSeed","math","register","defaults","font","size","color","initialxAxisLabels","i","label","push","Plot","props","initFunc","initDerivative","state","xAxisLabels","yData","fn","curApprox","plugins","autocolors","annotation","annotations","xAxis","type","yMin","yMax","borderColor","prevApprox","backgroundColor","chartRef","createRef","nextIteration","bind","randomizePolynomial","setFunction","setApprox","f","fprime","tangentData","length","x","a","L","setState","e","target","value","nextApprox","toString","prevState","xValue","yValue","data","labels","datasets","function","options"],"sources":["/home/programowanie/newton-rhapson/newton/src/Plot.js"],"sourcesContent":["import { Chart } from 'chart.js'\nimport React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2'\nimport chartProperties from './ChartProperties'\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport { derivative, random } from 'mathjs';\nimport { create, all, evaluate } from 'mathjs'\nimport randomPolynomial from './randomPolynomial';\nimport TangentToGraph from './tangentLine';\n\n// math.js\nconst config = {\n  epsilon: 1e-12,\n  matrix: 'Matrix',\n  number: 'number',\n  precision: 64,\n  predictable: false,\n  randomSeed: null\n}\nconst math = create(all, config)\n\nChart.register(annotationPlugin);\nChart.register(zoomPlugin);\n\nChart.defaults.font.size = 16;\nChart.defaults.color = \"#bbb\";\n\nlet initialxAxisLabels = [];\nfor(let i = -50; i < 50; i++) {\n  let label = i/10;\n  initialxAxisLabels.push(label);\n}\n\nexport default class Plot extends Component {\n  constructor(props) {\n    super(props);\n\n    let initFunc = randomPolynomial();\n    let initDerivative = derivative(initFunc, \"x\");\n    this.state = {\n      xAxisLabels: initialxAxisLabels,\n      yData: [],\n      //fn: \"x^3 + 5x^2 + 3x + 2\"\n      fn: initFunc,\n      derivative: initDerivative, \n      curApprox: 2,\n      plugins: {\n        autocolors: false,\n        annotation: {\n          annotations: {\n            // The x axis (Line at y=0)\n            xAxis: {\n              type: 'line',\n              yMin: 0,\n              yMax: 0,\n              borderColor: '#383838'\n            },\n            prevApprox: {\n              type: 'point',\n              backgroundColor: 'rgba(255, 99, 132, 0.25)'\n            },\n            curApprox: {\n              type: 'point',\n              backgroundColor: 'rgba(255, 99, 132, 0.25)'\n            }\n          }\n        },\n        /*\n        zoom: {\n          zoom: {\n            wheel: {\n              enabled: true,\n            },\n            pan: {\n              enabled: true,\n              mode: \"xy\"\n            },\n            pinch: {\n              enabled: true\n            },\n            mode: 'xy',\n          }\n        }\n        */\n      }\n    }\n    \n    this.chartRef = React.createRef();\n\n    this.nextIteration = this.nextIteration.bind(this);\n    this.randomizePolynomial = this.randomizePolynomial.bind(this);\n    this.setFunction = this.setFunction.bind(this);\n    this.setApprox = this.setApprox.bind(this);\n  }\n\n  setFunction(f) {\n    let fprime = derivative(f, \"x\");\n\n    // Update the chart\n    let yData = [];\n      let tangentData = [];\n      for(let i = 0; i < this.state.xAxisLabels.length; i++) {\n        let x = this.state.xAxisLabels[i];\n\n        yData.push(math.evaluate(f, {x: x}));\n      \n        let a = this.state.curApprox;\n        let L = TangentToGraph(f, a, this.state.derivative);\n        tangentData.push(math.evaluate(L, {x:x}))\n        \n        this.setState({\n          yData: yData,\n          tangentData: tangentData,\n          fn: f,\n          derivative: fprime\n        });\n        \n      }\n  }\n  randomizePolynomial() {\n    this.setFunction(randomPolynomial());\n  }\n  setApprox(e) {\n    this.setState({\n      curApprox: e.target.value,\n    })\n  }\n  nextIteration() {\n    // nextApprox = curApprox - f(curApprox)/f'(curApprox)\n    let curApprox = this.state.curApprox;\n    let f = this.state.fn\n    let nextApprox = \n        curApprox \n          -\n        evaluate(f, {x:curApprox})\n          /  \n        evaluate(this.state.derivative.toString(), {x: curApprox});\n\n        this.setState(prevState => ({\n          plugins: {\n            ...prevState.plugins,           \n            annotation: {                     \n              ...prevState.plugins.annotation,   \n              annotations: {\n                ...prevState.plugins.annotation.annotations,\n                curApprox: {\n                  type: 'point',\n                  xValue: curApprox,\n                  yValue: evaluate(f, {x: curApprox}),\n                  backgroundColor: 'rgba(255, 99, 132, 0.25)'\n                },\n                nextApprox: {\n                  type: 'point',\n                  xValue: nextApprox,\n                  yValue: evaluate(f, {x: nextApprox}),\n                  backgroundColor: 'rgba(255, 99, 132, 0.25)'\n                }\n              }\n            }\n          }\n        }))\n\n    this.setState({\n      nextApprox: curApprox,\n      curApprox: nextApprox\n    });\n    // Trigger a chart refresh\n    this.setFunction(this.state.fn);\n  }\n\n  componentDidMount() {\n  }\n\n\n  render() {\n    let data = {\n      labels: this.state.xAxisLabels,\n      // The function\n      datasets: [{\n        label: this.state.fn,\n        borderColor: \"blue\",\n        function: this.state.fn,\n        data: this.state.yData,\n      }, \n      // The function's tangent line\n      {\n        label: \"Tangent\",\n        borderColor: \"gray\",\n        function: this.state.fn, // The function is later manipulated in the plugin for it to be a tangent line\n        derivative: this.state.derivative,\n        data: this.state.tangentData,\n        curApprox: this.state.curApprox\n      },\n    ]\n    }\n    \n    return (\n      <>\n        <Line ref={this.chartRef} plugins={this.state.plugins} options={chartProperties.options} data={data} plugins={chartProperties.plugins}/>\n\n        <button onClick={this.nextIteration}>Next Iteration</button>\n        <button onClick={this.randomizePolynomial}>Randomize Polynomial</button>\n        <input placeholder={\"Initial approximation\"} onChange={this.setApprox}></input>\n      </>\n    )\n  }\n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}