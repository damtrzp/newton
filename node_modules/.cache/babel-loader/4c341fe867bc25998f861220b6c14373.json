{"ast":null,"code":"import _classCallCheck from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/programowanie/newton-rhapson/newton/src/Plot.js\";\nimport { Chart } from 'chart.js';\nimport React, { Component } from 'react';\nimport { create, all, evaluate } from 'mathjs';\nvar config = {\n  epsilon: 1e-12,\n  matrix: 'Matrix',\n  number: 'number',\n  precision: 64,\n  predictable: false,\n  randomSeed: null\n};\nvar math = create(all, config);\nChart.defaults.font.size = 16;\nChart.defaults.color = \"#bbb\";\nvar initialxAxisLabels = [];\n\nfor (var i = -50; i < 50; i++) {\n  var label = i;\n  initialxAxisLabels.push(label);\n}\n\nfunction setPolynomial(x) {\n  return x * x * x + 5 * (x * x) + 3 * x + 5;\n}\n\nvar Plot = /*#__PURE__*/function (_Component) {\n  _inherits(Plot, _Component);\n\n  function Plot(props) {\n    var _this;\n\n    _classCallCheck(this, Plot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Plot).call(this, props));\n    _this.state = {\n      xAxisLabels: initialxAxisLabels,\n      yData: [],\n      //fn: \"x^3 + 5x^2 + 3x + 2\"\n      fn: \"x^3 + 3x^2 + 3x + 20\",\n      curApprox: 30\n    };\n    return _this;\n  }\n\n  _createClass(Plot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var ctx = document.getElementById(\"plotCanvas\").getContext(\"2d\");\n      console.log(this);\n      var plot = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: this.state.xAxisLabels,\n          // The function\n          datasets: [{\n            label: \"f(x)=x³ + 5x² + 3x + 2\",\n            borderColor: \"blue\",\n            function: this.state.fn,\n            data: []\n          }, // The function's tangent line\n          {\n            label: \"Tangent\",\n            borderColor: \"gray\",\n            function: this.state.fn,\n            // The function is later manipulated in the plugin for it to be a tangent line\n            data: []\n          }]\n        },\n        plugins: [{\n          beforeInit: function beforeInit(chart) {\n            var data = chart.config.data;\n\n            for (var j = 0; j < data.datasets.length; j++) {\n              for (var _i = 0; _i < data.labels.length; _i++) {\n                var f = data.datasets[j].function;\n                var x = data.labels[_i];\n                var y = void 0;\n                y = math.evaluate(f, {\n                  x: x\n                });\n\n                if (data.datasets[j].label == \"Tangent\") {\n                  var a = 2;\n                  var derivative = math.derivative(f, \"x\");\n                  console.log(f.replaceAll(\"x\", a)); // L(x) = f '(a) (x - a) + f(a)\n\n                  var L = \"\".concat(derivative.evaluate({\n                    x: a\n                  }), \" * (x-\").concat(a, \") + \").concat(f.evaluate({\n                    x: a\n                  }));\n                  y = math.evaluate(L, {\n                    x: x\n                  });\n                }\n\n                data.datasets[j].data.push(y);\n              }\n            }\n          }\n        }],\n        options: {\n          elements: {\n            point: {\n              radius: 0\n            }\n          },\n          responsive: true,\n          scales: {\n            y: {\n              min: -250,\n              max: 250\n            },\n            x: {\n              min: -250,\n              max: 500\n            }\n          }\n        }\n      });\n      plot.update();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        id: \"plotCanvas\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Plot;\n}(Component);\n\nexport { Plot as default };","map":{"version":3,"names":["Chart","React","Component","create","all","evaluate","config","epsilon","matrix","number","precision","predictable","randomSeed","math","defaults","font","size","color","initialxAxisLabels","i","label","push","setPolynomial","x","Plot","props","state","xAxisLabels","yData","fn","curApprox","ctx","document","getElementById","getContext","console","log","plot","type","data","labels","datasets","borderColor","function","plugins","beforeInit","chart","j","length","f","y","a","derivative","replaceAll","L","options","elements","point","radius","responsive","scales","min","max","update"],"sources":["/home/programowanie/newton-rhapson/newton/src/Plot.js"],"sourcesContent":["import { Chart } from 'chart.js'\nimport React, { Component } from 'react'\nimport { create, all, evaluate } from 'mathjs'\n\nconst config = {\n  epsilon: 1e-12,\n  matrix: 'Matrix',\n  number: 'number',\n  precision: 64,\n  predictable: false,\n  randomSeed: null\n}\nconst math = create(all, config)\nChart.defaults.font.size = 16;\nChart.defaults.color = \"#bbb\";\n\nlet initialxAxisLabels = [];\nfor(let i = -50; i < 50; i++) {\n  let label = i;\n  initialxAxisLabels.push(label);\n}\n\nfunction setPolynomial(x) {\n  return x*x*x + 5*(x*x) + 3*x + 5;\n}\n\nexport default class Plot extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      xAxisLabels: initialxAxisLabels,\n      yData: [],\n      //fn: \"x^3 + 5x^2 + 3x + 2\"\n      fn: \"x^3 + 3x^2 + 3x + 20\", \n      curApprox: 30\n    }\n  }\n\n  componentDidMount() {\n    let ctx = document.getElementById(\"plotCanvas\").getContext(\"2d\");\n    console.log(this);\n    let plot = new Chart(ctx, {\n      type: \"line\",\n      data : {\n        labels: this.state.xAxisLabels,\n        // The function\n        datasets: [{\n          label: \"f(x)=x³ + 5x² + 3x + 2\",\n          borderColor: \"blue\",\n          function: this.state.fn,\n          data: [],\n        }, \n        // The function's tangent line\n        {\n          label: \"Tangent\",\n          borderColor: \"gray\",\n          function: this.state.fn, // The function is later manipulated in the plugin for it to be a tangent line\n          data: []\n        }\n      ]\n      },\n      plugins: [{\n        beforeInit: function(chart) {\n          let data = chart.config.data;\n      \n          for(let j = 0; j < data.datasets.length; j++) {\n            for(let i = 0; i < data.labels.length; i++) {\n              let f = data.datasets[j].function;\n              \n              let x = data.labels[i];\n              let y;\n\n              y = math.evaluate(f, {x: x});\n              if(data.datasets[j].label == \"Tangent\") {\n                let a = 2;\n                let derivative = math.derivative(f, \"x\")\n\n                console.log(f.replaceAll(\"x\", a));\n                // L(x) = f '(a) (x - a) + f(a)\n                let L = `${derivative.evaluate({x:a})} * (x-${a}) + ${f.evaluate({x:a})}`;\n                \n\n                y = math.evaluate(L, {x:x});\n              }\n              \n\n              data.datasets[j].data.push(y);\n            }\n          }\n        }\n    }],\n    options: {\n      elements: {\n        point: {\n          radius: 0\n        }\n      },\n      responsive: true,\n      scales: {\n        y: {\n          min: -250,\n          max: 250\n        },\n        x: {\n          min: -250,\n          max: 500\n        }\n      }\n    }\n    })\n    plot.update();\n  }\n\n\n  render() {\n    \n\n\n    return (\n      <canvas id=\"plotCanvas\">\n\n      </canvas>\n    )\n  }\n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}