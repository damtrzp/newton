{"ast":null,"code":"import _objectSpread from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/programowanie/newton-rhapson/newton/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/programowanie/newton-rhapson/newton/src/Plot.js\";\nimport { Chart } from 'chart.js';\nimport React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport chartProperties from './ChartProperties';\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport { derivative, random, thomsonCrossSectionDependencies } from 'mathjs';\nimport { create, all, evaluate } from 'mathjs';\nimport randomPolynomial from './randomPolynomial';\nimport TangentToGraph from './tangentLine';\nimport Menu from './Menu'; // math.js\n\nvar config = {\n  epsilon: 1e-12,\n  matrix: 'Matrix',\n  number: 'number',\n  precision: 64,\n  predictable: false,\n  randomSeed: null\n};\nvar math = create(all, config);\nChart.register(annotationPlugin);\nChart.register(zoomPlugin);\nChart.defaults.font.size = 16;\nChart.defaults.color = \"#bbb\";\nvar initialxAxisLabels = [];\nvar xDivident = 10;\n\nfor (var i = -50; i < 50; i++) {\n  var label = i / xDivident;\n  initialxAxisLabels.push(label);\n}\n\nvar Plot = /*#__PURE__*/function (_Component) {\n  _inherits(Plot, _Component);\n\n  function Plot(props) {\n    var _this;\n\n    _classCallCheck(this, Plot);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Plot).call(this, props));\n    _this.nextIteration = _this.nextIteration.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.randomizePolynomial = _this.randomizePolynomial.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setFunction = _this.setFunction.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.setApprox = _this.setApprox.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getAllFunctionData = _this.getAllFunctionData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateApproxAnnotations = _this.updateApproxAnnotations.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    var initFunc = randomPolynomial();\n    var initDerivative = derivative(initFunc, \"x\");\n\n    var funcData = _this.getAllFunctionData(initFunc, initialxAxisLabels);\n\n    _this.state = {\n      xAxisLabels: initialxAxisLabels,\n      yData: [funcData.yData],\n      fn: initFunc,\n      derivative: initDerivative,\n      curApprox: null,\n      options: chartProperties.options\n    };\n    _this.chartRef = React.createRef();\n    _this.approxRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Plot, [{\n    key: \"setFunction\",\n    value: function setFunction(f) {\n      var state = this.getAllFunctionData(f, this.state.xAxisLabels, this.state.curApprox);\n      this.setState(state);\n    }\n  }, {\n    key: \"getAllFunctionData\",\n    value: function getAllFunctionData(f, xAxisLabels, a) {\n      var fprime = derivative(f, \"x\"); // Update the chart\n\n      var yData = [];\n      var tangentData = [];\n\n      for (var _i = 0; _i < xAxisLabels.length; _i++) {\n        var x = xAxisLabels[_i];\n        yData.push(math.evaluate(f, {\n          x: x\n        }));\n\n        if (a) {\n          var L = TangentToGraph(f, a, fprime);\n          tangentData.push(math.evaluate(L, {\n            x: x\n          }));\n        }\n      }\n\n      return {\n        yData: yData,\n        tangentData: tangentData,\n        fn: f,\n        derivative: fprime\n      };\n    }\n  }, {\n    key: \"randomizePolynomial\",\n    value: function randomizePolynomial() {\n      this.setFunction(randomPolynomial());\n    }\n  }, {\n    key: \"setApprox\",\n    value: function setApprox() {\n      var _this2 = this;\n\n      this.setState({\n        curApprox: Number(this.approxRef.current.value)\n      }, function () {\n        _this2.chartRef.current.update();\n\n        _this2.nextIteration();\n\n        _this2.updateApproxAnnotations();\n      });\n    }\n  }, {\n    key: \"updateApproxAnnotations\",\n    value: function updateApproxAnnotations() {\n      var curApprox = this.state.curApprox;\n      var xOffset = this.state.xAxisLabels[0];\n      var f = this.state.fn;\n      var nextApprox = this.state.nextApprox || curApprox;\n      console.table(curApprox, xOffset, f, nextApprox);\n      this.setState(function (prevState) {\n        return {\n          options: _objectSpread({}, prevState.options, {\n            plugins: _objectSpread({}, prevState.options.plugins, {\n              annotation: _objectSpread({}, prevState.options.plugins.annotation, {\n                annotations: _objectSpread({}, prevState.options.plugins.annotation.annotations, {\n                  curApprox: {\n                    type: 'point',\n                    xValue: (nextApprox - xOffset) * xDivident,\n                    yValue: evaluate(f, {\n                      x: nextApprox\n                    }),\n                    backgroundColor: 'rgba(255, 99, 132, 0.25)'\n                  },\n                  nextApprox: {\n                    type: 'point',\n                    xValue: (curApprox - xOffset) * xDivident,\n                    yValue: 0,\n                    backgroundColor: 'rgba(255, 99, 132, 0.25)'\n                  }\n                })\n              })\n            })\n          })\n        };\n      });\n    }\n  }, {\n    key: \"nextIteration\",\n    value: function nextIteration() {\n      var _this3 = this;\n\n      // nextApprox = curApprox - f(curApprox)/f'(curApprox)\n      var curApprox = this.state.curApprox;\n      var f = this.state.fn;\n      var nextApprox = curApprox - evaluate(f, {\n        x: curApprox\n      }) / evaluate(this.state.derivative.toString(), {\n        x: curApprox\n      });\n      this.setState({\n        nextApprox: curApprox,\n        curApprox: nextApprox\n      }, function () {\n        _this3.updateApproxAnnotations();\n      }); // Trigger a chart update\n\n      this.setFunction(f);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {// This fucking piece of shit won't update at the start no matter where i put this bullshit below\n      // this.chartRef.current && this.chartRef.current.chartInstance && this.chartRef.current.chartInstance.update();\n      // Nevermind\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = {\n        labels: this.state.xAxisLabels,\n        // The function\n        datasets: [{\n          label: this.state.fn,\n          borderColor: \"blue\",\n          function: this.state.fn,\n          data: this.state.yData\n        }, // The function's tangent line\n        {\n          label: \"Tangent\",\n          borderColor: \"gray\",\n          function: this.state.fn,\n          // The function is later manipulated in the plugin for it to be a tangent line\n          derivative: this.state.derivative,\n          data: this.state.tangentData,\n          curApprox: this.state.curApprox\n        }]\n      };\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Line, {\n        ref: this.chartRef,\n        options: this.state.options,\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Menu, {\n        nextIterationFn: this.nextIteration,\n        nextIterationDisabled: !this.state.yData,\n        randomizePolynomialFn: this.randomizePolynomial,\n        setApproxFn: this.setApprox,\n        approxRef: this.approxRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Plot;\n}(Component);\n\nexport { Plot as default };","map":{"version":3,"names":["Chart","React","Component","Line","chartProperties","annotationPlugin","zoomPlugin","derivative","random","thomsonCrossSectionDependencies","create","all","evaluate","randomPolynomial","TangentToGraph","Menu","config","epsilon","matrix","number","precision","predictable","randomSeed","math","register","defaults","font","size","color","initialxAxisLabels","xDivident","i","label","push","Plot","props","nextIteration","bind","randomizePolynomial","setFunction","setApprox","getAllFunctionData","updateApproxAnnotations","initFunc","initDerivative","funcData","state","xAxisLabels","yData","fn","curApprox","options","chartRef","createRef","approxRef","f","setState","a","fprime","tangentData","length","x","L","Number","current","value","update","xOffset","nextApprox","console","table","prevState","plugins","annotation","annotations","type","xValue","yValue","backgroundColor","toString","data","labels","datasets","borderColor","function"],"sources":["/home/programowanie/newton-rhapson/newton/src/Plot.js"],"sourcesContent":["import { Chart } from 'chart.js'\nimport React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2'\nimport chartProperties from './ChartProperties'\nimport annotationPlugin from 'chartjs-plugin-annotation';\nimport zoomPlugin from 'chartjs-plugin-zoom';\nimport { derivative, random, thomsonCrossSectionDependencies } from 'mathjs';\nimport { create, all, evaluate } from 'mathjs'\nimport randomPolynomial from './randomPolynomial';\nimport TangentToGraph from './tangentLine';\nimport Menu from './Menu';\n\n// math.js\nconst config = {\n  epsilon: 1e-12,\n  matrix: 'Matrix',\n  number: 'number',\n  precision: 64,\n  predictable: false,\n  randomSeed: null\n}\nconst math = create(all, config)\n\nChart.register(annotationPlugin);\nChart.register(zoomPlugin);\n\nChart.defaults.font.size = 16;\nChart.defaults.color = \"#bbb\";\n\nlet initialxAxisLabels = [];\nconst xDivident = 10\nfor(let i = -50; i < 50; i++) {\n  let label = i/xDivident;\n  initialxAxisLabels.push(label);\n}\n\nexport default class Plot extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nextIteration = this.nextIteration.bind(this);\n    this.randomizePolynomial = this.randomizePolynomial.bind(this);\n    this.setFunction = this.setFunction.bind(this);\n    this.setApprox = this.setApprox.bind(this);\n    this.getAllFunctionData = this.getAllFunctionData.bind(this);\n    this.updateApproxAnnotations = this.updateApproxAnnotations.bind(this);\n\n    let initFunc = randomPolynomial();\n    let initDerivative = derivative(initFunc, \"x\");\n    let funcData = this.getAllFunctionData(initFunc, initialxAxisLabels);\n    this.state = {\n      xAxisLabels: initialxAxisLabels,\n      yData: [funcData.yData],\n      fn: initFunc,\n      derivative: initDerivative, \n      curApprox: null,\n      options: chartProperties.options\n    }\n\n    this.chartRef = React.createRef();\n    this.approxRef = React.createRef();\n  }\n\n  setFunction(f) {\n    let state = this.getAllFunctionData(f, this.state.xAxisLabels, this.state.curApprox);\n\n    this.setState(state);\n  }\n  getAllFunctionData(f, xAxisLabels, a) {\n    let fprime = derivative(f, \"x\");\n\n    // Update the chart\n      let yData = [];\n      let tangentData = [];\n      for(let i = 0; i < xAxisLabels.length; i++) {\n        let x = xAxisLabels[i];\n\n        yData.push(math.evaluate(f, {x: x}));\n      \n        if(a) {\n          let L = TangentToGraph(f, a, fprime);\n          tangentData.push(math.evaluate(L, {x:x}));\n        }\n      }\n      return {\n        yData: yData,\n        tangentData: tangentData,\n        fn: f,\n        derivative: fprime\n      }\n  }\n  randomizePolynomial() {\n    this.setFunction(randomPolynomial());\n  }\n  setApprox() {\n    this.setState({\n      curApprox: Number(this.approxRef.current.value),\n    }, () => {\n      this.chartRef.current.update();\n      this.nextIteration();\n      this.updateApproxAnnotations();\n    })\n    \n  }\n  updateApproxAnnotations() {\n    let curApprox = this.state.curApprox;\n    let xOffset = this.state.xAxisLabels[0];\n    let f = this.state.fn;\n    let nextApprox = this.state.nextApprox || curApprox;\n    console.table(curApprox, xOffset, f, nextApprox)\n    this.setState(prevState => ({\n      options: {\n        ...prevState.options,\n        plugins: {\n          ...prevState.options.plugins,           \n          annotation: {                     \n            ...prevState.options.plugins.annotation,   \n            annotations: {\n              ...prevState.options.plugins.annotation.annotations,\n              curApprox: {\n                type: 'point',\n                xValue: (nextApprox - xOffset)*xDivident,\n                yValue: evaluate(f, {x: nextApprox}),\n                backgroundColor: 'rgba(255, 99, 132, 0.25)'\n              },\n              nextApprox: {\n                type: 'point',\n                xValue: (curApprox - xOffset)*xDivident,\n                yValue: 0,\n                backgroundColor: 'rgba(255, 99, 132, 0.25)'\n              }\n            }\n          }\n        }\n      }\n    }))\n  }\n  nextIteration() {\n    // nextApprox = curApprox - f(curApprox)/f'(curApprox)\n    let curApprox = this.state.curApprox;\n    let f = this.state.fn;\n    let nextApprox = \n        curApprox \n          -\n        evaluate(f, {x:curApprox})\n          /  \n        evaluate(this.state.derivative.toString(), {x: curApprox});\n\n          \n      \n        \n        \n    this.setState({\n      nextApprox: curApprox,\n      curApprox: nextApprox\n    }, () => {\n      this.updateApproxAnnotations();\n    });\n    // Trigger a chart update\n    this.setFunction(f);\n  }\n\n  componentDidUpdate() {\n    // This fucking piece of shit won't update at the start no matter where i put this bullshit below\n    // this.chartRef.current && this.chartRef.current.chartInstance && this.chartRef.current.chartInstance.update();\n\n    // Nevermind\n  }\n\n\n  render() {\n    let data = {\n      labels: this.state.xAxisLabels,\n      // The function\n      datasets: [{\n        label: this.state.fn,\n        borderColor: \"blue\",\n        function: this.state.fn,\n        data: this.state.yData,\n      }, \n      // The function's tangent line\n      {\n        label: \"Tangent\",\n        borderColor: \"gray\",\n        function: this.state.fn, // The function is later manipulated in the plugin for it to be a tangent line\n        derivative: this.state.derivative,\n        data: this.state.tangentData,\n        curApprox: this.state.curApprox\n      },\n      \n    ]\n    }\n    \n    return (\n      <>\n        <Line ref={this.chartRef} \n      options={this.state.options} data={data}/>\n\n        <Menu\n          nextIterationFn={this.nextIteration}\n          nextIterationDisabled={!this.state.yData}\n          randomizePolynomialFn={this.randomizePolynomial}\n          setApproxFn={this.setApprox}\n          approxRef={this.approxRef}\n        >\n        </Menu>\n      </>\n    )\n  }\n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}