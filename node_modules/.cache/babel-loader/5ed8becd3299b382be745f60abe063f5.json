{"ast":null,"code":"'use strict';\n\nmodule.exports = function (node) {\n  var self = this;\n  var arr = [];\n  this.rawify(this.options.rawArrayExpressionElements, function () {\n    arr = node.nodes.map(function (el) {\n      return self.next(el);\n    });\n  });\n  var arrString = '[' + arr.join(',') + ']';\n\n  if (this.options.raw) {\n    return arrString;\n  }\n\n  return this.options.factory + '(' + arrString + ')';\n};","map":{"version":3,"names":["module","exports","node","self","arr","rawify","options","rawArrayExpressionElements","nodes","map","el","next","arrString","join","raw","factory"],"sources":["/home/programowanie/newton-rhapson/newton/node_modules/math-codegen/lib/node/ArrayNode.js"],"sourcesContent":["'use strict'\nmodule.exports = function (node) {\n  var self = this\n  var arr = []\n  this.rawify(this.options.rawArrayExpressionElements, function () {\n    arr = node.nodes.map(function (el) {\n      return self.next(el)\n    })\n  })\n  var arrString = '[' + arr.join(',') + ']'\n\n  if (this.options.raw) {\n    return arrString\n  }\n  return this.options.factory + '(' + arrString + ')'\n}\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;EAC/B,IAAIC,IAAI,GAAG,IAAX;EACA,IAAIC,GAAG,GAAG,EAAV;EACA,KAAKC,MAAL,CAAY,KAAKC,OAAL,CAAaC,0BAAzB,EAAqD,YAAY;IAC/DH,GAAG,GAAGF,IAAI,CAACM,KAAL,CAAWC,GAAX,CAAe,UAAUC,EAAV,EAAc;MACjC,OAAOP,IAAI,CAACQ,IAAL,CAAUD,EAAV,CAAP;IACD,CAFK,CAAN;EAGD,CAJD;EAKA,IAAIE,SAAS,GAAG,MAAMR,GAAG,CAACS,IAAJ,CAAS,GAAT,CAAN,GAAsB,GAAtC;;EAEA,IAAI,KAAKP,OAAL,CAAaQ,GAAjB,EAAsB;IACpB,OAAOF,SAAP;EACD;;EACD,OAAO,KAAKN,OAAL,CAAaS,OAAb,GAAuB,GAAvB,GAA6BH,SAA7B,GAAyC,GAAhD;AACD,CAdD"},"metadata":{},"sourceType":"script"}